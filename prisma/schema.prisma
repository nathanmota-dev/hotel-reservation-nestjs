// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role      @default(USER)
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Booking {
  id        Int           @id @default(autoincrement())
  userId    Int
  user      User          @relation(fields: [userId], references: [id])
  roomId    Int
  room      Room          @relation(fields: [roomId], references: [id])
  startDate DateTime
  endDate   DateTime
  status    BookingStatus @default(PENDING) 
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model City {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  hotels    Hotel[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hotel {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  cityId    Int
  city      City     @relation(fields: [cityId], references: [id])
  rooms     Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id        Int       @id @default(autoincrement())
  hotelId   Int
  hotel     Hotel     @relation(fields: [hotelId], references: [id])
  name      String
  capacity  Int
  price     Float
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}